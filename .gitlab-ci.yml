stages:
  - tests
  - release
  - deploy
  
tests:
  image: registry.orbitumdev.ru/docker-images/web-php7-dev
  stage: tests
  script:
    - mv composer.json.dist composer.json
    - composer update -n
    - vendor/bin/codecept build
    - vendor/bin/codecept run --coverage --no-colors
  only:
    - branches
  except:
    - tags
  tags:
    - linux
    - docker
  cache:
    key: ${CI_PROJECT_PATH}
    paths:
      - ./vendor
      - ./composer.lock
      
deploy for testing:
  stage: deploy
  environment: 
    name: testing
    #url: http://testing.project.local //optional
  script:
    - echo "deploy dev"
    # - updater service-name 'composer update -n' //some commands for deploy
  only:
    - master
  except:
    - tags
  tags:
    - linux
    - shell
    
create release:
  stage: release
  image: registry.orbitumdev.ru/theinpu/version
  script:
    - /root/version/bin/markBuild
  only:
    - master
  except:
    - tags
  when: manual
  tags:
    - linux
    - docker

create version shield:
  stage: deploy
  script:
    - git clone git@orbitumdev.ru:${CI_PROJECT_PATH}.wiki.git wiki
    - cd wiki
    - curl https://img.shields.io/badge/release-${CI_BUILD_TAG}-blue.svg > version.svg
    - git add .
    - git commit -m "Update version shield"
    - git push origin master
    - cd ..
    - rm -rfv wiki
  when: on_success
  only:
    - tags
  tags:
    - linux
    - shell
    
delpoy to production:
  stage: deploy
  environment:
    name: production
    #url: http://production.com //optional
  script:
    - echo "deploy production" # some commands for prod deploy
  only:
    - tags
  tags:
    - linux
    - shell